@{
    ViewData["Title"] = "MeDirect Game Settings";
}
@model MeDirect.Web.Models.UpdateGameSettingsViewModel



@using (Html.BeginForm("UpdateGameSettings", "Home", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(x => x.GameSettings.Id)
        @Html.TextBoxFor(x => x.GameSettings.Id, new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.GameSettings.Size)
        @Html.TextBoxFor(x => x.GameSettings.Size, new { @class = "form-control", placeholder = "Enter Url" })
        @Html.ValidationMessageFor(x => x.GameSettings.Size, null, new { @class = "invalid-feedback d-block" })
    </div>

    <button type="submit" class="btn btn-primary">Update</button>

}
<br />


<form>
    <div class="form-row align-items-center">
        <div class="col-auto">
            <label class="sr-only" for="OpenLightY">Open Light Y Coordinate(Row)</label>
            <input type="text" class="form-control mb-2" id="OpenLightY" placeholder="Light Y Coordinate">
        </div>
        <div class="col-auto">
            <label class="sr-only" for="OpenLightX">Open Light X Coordinate(Col)</label>
            <input type="text" class="form-control mb-2" id="OpenLightX" placeholder="Light Y Coordinate">
        </div>
        <div class="col-auto">
            <button type="button" class="btn btn-outline-success" id="addNewCoordinate">Add</button>
        </div>
    </div>
</form>



<table class="table table-bordered">
    <thead>
        <tr>
            <th scope="col">Open Light Y Coordinate(Row)</th>
            <th scope="col">Open Light X Coordinate(Col)</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GameLights)
        {
            <tr>
                <td>@item.LightOpenY</td>
                <td>@item.LightOpenX</td>
                <td><a href="#" onclick="Del('@item.Id')">Del</a></td>
            </tr>
        }
    </tbody>
</table>





@section Scripts{
    <script>
        $("form").submit(function (event) {
            var form = $(this);
            if (form.valid()) {
                event.preventDefault();
                var UpdateGameSettingsViewModel = {
                    GameSettings: {
                        Id: $("#GameSettings_Id").val(),
                        Size: $('#GameSettings_Size').val()
                    }
                }
                $.ajax({
                    type: "POST",
                    url: '/Home/Settings',
                    data: UpdateGameSettingsViewModel,
                    async: false,
                    success: successGameSetting,
                    error: error
                });
            }
            else {
                return false;
            }
        })

        function successGameSetting(result, status) {
              if (result.code == 0) {
                    Swal.fire(
                        result.msg,
                        '',
                        'success'
                    ).then(function () {
                        var url = '@Url.Action("Index", "Home")';
                        window.location.href = url;
                    });
                }else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: result.msg,

                    })
                }
        }
        function error() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',

            })
        }


        $('#addNewCoordinate').click(function () {
            debugger;
            var SetGameLightsModel = {
                GameLight: {
                    GameSettingId: $("#GameSettings_Id").val(),
                    LightOpenY: $("#OpenLightY").val(),
                    LightOpenX: $('#OpenLightX').val()
                }
            }

            $.ajax({
                type: "POST",
                url: '/Home/AddCoordinate',
                data: SetGameLightsModel,
                async: false,
                success: successGameLight,
                error: error
            });
        })

        function successGameLight(result,status) {
             if (result.code == 0) {
                    Swal.fire(
                        result.msg,
                        '',
                        'success'
                    ).then(function () {
                        var url = '@Url.Action("Settings", "Home")';
                        window.location.href = url;
                    });
                }else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: result.msg,

                    })
                }
        }

        function Del(lightId) {
            var SetGameLightsModel = {
                GameLight: {
                    Id: lightId,
                    LightOpenY: $("#OpenLightY").val(),
                    LightOpenX: $('#OpenLightX').val()
                }
            }
            $.ajax({
                type: "POST",
                url: '/Home/DelOpenLight',
                data: SetGameLightsModel,
                async: false,
                success: successDelLight,
                error: error
            });
        }

        function successDelLight(result,status) {
             if (result.code == 0) {
                    Swal.fire(
                        result.msg,
                        '',
                        'success'
                    ).then(function () {
                        var url = '@Url.Action("Settings", "Home")';
                        window.location.href = url;
                    });
                }else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: result.msg,

                    })
                }
        }

    </script>

}